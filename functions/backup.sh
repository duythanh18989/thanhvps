#!/bin/bash
# ============================================================
# üíæ MODULE: BACKUP TO√ÄN B·ªò WEBSITE & DATABASE
# ------------------------------------------------------------
# T√°c gi·∫£: ThanhTV
# Version: v1.0
# M√¥ t·∫£:
#   - Backup to√†n b·ªô file website + dump DB
#   - Cho ph√©p ch·ªçn domain c·ª• th·ªÉ
#   - T·∫°o cron backup t·ª± ƒë·ªông m·ªói ng√†y
#   - Gi·ªØ l·∫°i X ng√†y g·∫ßn nh·∫•t
# ============================================================

BASE_DIR=$(dirname "$(realpath "$0")")/../..
LOG_FILE="/var/log/backup_vps.log"
BACKUP_ROOT="/opt/backups/sites"
DB_BACKUP_DIR="/opt/backups/mysql"
KEEP_DAYS=7
CRON_SCHEDULE="30 2 * * *" # 02:30 AM h·∫±ng ng√†y

# ------------------------------------------------------------
# üß© H√ÄM: T·∫°o th∆∞ m·ª•c backup
# ------------------------------------------------------------
init_backup_dir() {
  mkdir -p "$BACKUP_ROOT"
  mkdir -p "$DB_BACKUP_DIR"
  chmod -R 700 /opt/backups
}

# ------------------------------------------------------------
# üíæ H√ÄM: Backup 1 domain c·ª• th·ªÉ
# ------------------------------------------------------------
backup_domain() {
  local domain=$1
  local timestamp=$(date +%Y-%m-%d_%H-%M-%S)
  local web_root="/var/www/$domain"
  local backup_file="${BACKUP_ROOT}/${domain}_${timestamp}.tar.gz"

  if [ ! -d "$web_root" ]; then
    echo "‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c /var/www/$domain"
    return
  fi

  echo "‚û°Ô∏è  ƒêang backup website: $domain ..."
  tar -czf "$backup_file" "$web_root" >/dev/null 2>&1
  echo "$(date '+%Y-%m-%d %H:%M:%S') | BACKUP SITE | $domain | $backup_file" >> "$LOG_FILE"
  echo "‚úÖ Backup ho√†n t·∫•t: $backup_file"
}

# ------------------------------------------------------------
# üß† H√ÄM: Backup to√†n b·ªô website & database
# ------------------------------------------------------------
backup_all() {
  echo "=============================================="
  echo "üíæ B·∫ÆT ƒê·∫¶U BACKUP TO√ÄN B·ªò VPS $(date '+%Y-%m-%d %H:%M:%S')"
  echo "=============================================="

  init_backup_dir

  # Backup database (n·∫øu MariaDB/MySQL ƒëang ch·∫°y)
  if systemctl is-active --quiet mariadb || systemctl is-active --quiet mysql; then
    DB_FILE="${DB_BACKUP_DIR}/db_$(date +%Y-%m-%d_%H-%M-%S).sql.gz"
    mysqldump --all-databases | gzip > "$DB_FILE"
    echo "$(date '+%Y-%m-%d %H:%M:%S') | BACKUP DB | $DB_FILE" >> "$LOG_FILE"
    echo "‚úÖ Backup database ho√†n t·∫•t: $DB_FILE"
  else
    echo "‚ö†Ô∏è  MariaDB/MySQL kh√¥ng ch·∫°y, b·ªè qua backup DB."
  fi

  # Backup t·ª´ng domain
  for site in /var/www/*; do
    [ -d "$site" ] || continue
    domain=$(basename "$site")
    backup_domain "$domain"
  done

  # X√≥a backup c≈©
  find "$BACKUP_ROOT" -type f -mtime +$KEEP_DAYS -delete
  find "$DB_BACKUP_DIR" -type f -mtime +$KEEP_DAYS -delete

  echo "‚úÖ D·ªçn d·∫πp backup c≈© h∆°n $KEEP_DAYS ng√†y."
  echo "=============================================="
  echo "üéØ Ho√†n t·∫•t backup VPS!"
}

# ------------------------------------------------------------
# ‚è∞ H√ÄM: T·∫°o cron job t·ª± ƒë·ªông
# ------------------------------------------------------------
setup_cron_backup() {
  if ! crontab -l 2>/dev/null | grep -q backup_vps.sh; then
    cat <<'EOF' > /usr/local/bin/backup_vps.sh
#!/bin/bash
bash "$BASE_DIR/functions/backup.sh" auto >/dev/null 2>&1
EOF
    chmod +x /usr/local/bin/backup_vps.sh
    (crontab -l 2>/dev/null; echo "$CRON_SCHEDULE /usr/local/bin/backup_vps.sh") | crontab -
    echo "‚úÖ Cron backup VPS ƒë√£ ƒë∆∞·ª£c c√†i (ch·∫°y l√∫c 02:30 AM)."
  fi
}

# ------------------------------------------------------------
# üöÄ ENTRY POINT
# ------------------------------------------------------------
if [ "$1" == "auto" ]; then
  backup_all
  exit 0
fi

# Menu th·ªß c√¥ng (g·ªçi t·ª´ menu.sh)
clear
echo "üíæ QU·∫¢N L√ù BACKUP VPS"
echo "-------------------------------------------"
echo "1Ô∏è‚É£  Backup to√†n b·ªô VPS"
echo "2Ô∏è‚É£  Backup website c·ª• th·ªÉ"
echo "3Ô∏è‚É£  C√†i cron auto backup"
echo "4Ô∏è‚É£  Xem log backup"
echo "5Ô∏è‚É£  Tho√°t"
read -p "üëâ Ch·ªçn thao t√°c: " opt

case $opt in
  1) backup_all ;;
  2)
    read -p "Nh·∫≠p domain: " domain
    backup_domain "$domain"
    ;;
  3) setup_cron_backup ;;
  4)
    tail -n 30 "$LOG_FILE"
    ;;
  5) exit 0 ;;
  *) echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá." ;;
esac
